#include <moveit/move_group_interface/move_group.h>
#include <moveit/planning_scene_interface/planning_scene_interface.h>

#include <moveit_msgs/DisplayRobotState.h>
#include <moveit_msgs/DisplayTrajectory.h>

#include <moveit_msgs/AttachedCollisionObject.h>
#include <moveit_msgs/CollisionObject.h>

int main(int argc, char **argv)
{
  ros::init(argc, argv, "my_youbot_ik");
  ros::NodeHandle n;
  ros::AsyncSpinner spinner(1);
  spinner.start();
  // Planning group: youbot
  static const std::string PLANNING_GROUP = "arm_1";
  // Define planning group
  moveit::planning_interface::MoveGroup move_group(PLANNING_GROUP);
  // Define planning scene
  moveit::planning_interface::PlanningSceneInterface planning_scene_interface;
  // Define raw pointer for planning group
  const robot_state::JointModelGroup* joint_model_group = move_group.getCurrentState()->getJointModelGroup(PLANNING_GROUP);
  // Planning to an inputted pose
  geometry_msgs::Pose target_pose;
  while (ros::ok()) {
    // Reading pose input from console
    std::cout << "> ";
    /*
    std::cin >> target_pose.position.x;
    std::cin >> target_pose.position.y;
    std::cin >> target_pose.position.z;
    std::cin >> target_pose.orientation.x;
    std::cin >> target_pose.orientation.y;
    std::cin >> target_pose.orientation.z;
    std::cin >> target_pose.orientation.w;
    */
    std::string givePos;
    std::cin >> givePos;
    if (givePos == "y") {

    target_pose.position.x = 0.0682586;
    target_pose.position.y = -0.0573478;
    target_pose.position.z = 0.434951;
    target_pose.orientation.x = 0.0369217;
    target_pose.orientation.y = 0.139403;
    target_pose.orientation.z = -0.602482;
    target_pose.orientation.w = 0.784996;
    move_group.setPoseTarget(target_pose);
    // Calling the planner
    moveit::planning_interface::MoveGroup::Plan my_plan;
    bool success = (move_group.plan(my_plan) == moveit::planning_interface::MoveItErrorCode::SUCCESS);
    ROS_INFO_NAMED("tutorial", "Visualizing pose goal %s", success ? "" : "FAILED");
    move_group.move();
    }
  }
}
